/**
 * Example 5: NLP Coreference Resolution.
 *
 * Query: isSameReferent(c3, X) 
 */

//
// SORT DECLARATIONS:
sort Universe: 14; // What is a good # here, possibly the number of words in the document being processed?

//
// RANDOM VARIABLE DECLARATIONS:
//
random corefChain: Universe -> Boolean;
random mention: Universe -> Boolean;
random word: Universe -> Boolean;
//
random corefChainMention: Universe x Universe -> Boolean; // coref_chain x mention
random mentionWord: Universe x Universe -> Boolean;       // mention x word
//
// Information from NLP system with respect to mentions and words
random typeOfMention: Universe -> Boolean; // { PRONOMINAL, NOMINAL, PROPER }
random gender: Universe -> Boolean;        // { MALE, FEMALE, NEUTRAL, UNKNOWN }
random number: Universe -> Boolean;        // {SINGULAR, PLURAL, UNKNOWN }
random animacy: Universe -> Boolean;       // { ANIMATE, INANIMATE, UNKNOWN }
random person: Universe -> Boolean;        // { I, YOU, HE, SHE, WE, THEY, IT, UNKNOWN} -> first, second, third and unknown
random caseType: Universe -> Boolean;      // { subject, object, possessive, unknown}
//
random mentionType: Universe x Universe   -> Boolean;  // mention x type_of_mention
random mentionGender: Universe x Universe -> Boolean;  // mention x gender
random mentionNumber: Universe x Universe -> Boolean;  // mention x number
random mentionAnimacy: Universe x Universe -> Boolean; // mention x animacy
random mentionPerson: Universe x Universe -> Boolean;  // mention x person
//
random isSameReferent: Universe x Universe -> Boolean;       // coref_chain x coref_chain
random canMapToSameReferent: Universe x Universe -> Boolean; // coref_chain x coref_chain

//
// RULES:
//

//
// High Level Rules for isSameReferent

// Matching gender of mentions between cluster chains increases probability
if canMapToSameReferent(X, Y) then if corefChainMention(X, XM) and corefChainMention(Y, YM) and mentionGender(XM, G) and mentionGender(YM, G) then isSameReferent(X, Y) 0.7;

//
// Background Knowledge
typeOfMention(pronominal);
typeOfMention(nominal);
typeOfMention(proper);
//
gender(male);
gender(female);
gender(neutral);
gender(unknown);
//
number(singular);
number(plural);
number(unknown);
//
animacy(animate);
animacy(inanimate);
animacy(unknown);
//
person(first);
person(second);
person(third);
person(unknown);
//
caseType(subject);
caseType(object);
caseType(possessive);

//
// Evidence coming from lower-level NLP system:
// e.g.: "President Obama has told the senator that his constituency would not support the measure."
word(w1);  // President
word(w2);  // Obama
word(w3);  // has
word(w4);  // told
word(w5);  // the
word(w6);  // senator
word(w7);  // that
word(w8);  // his
word(w9);  // constituency
word(w10); // would
word(w11); // not
word(w12); // support
word(w13); // the
word(w14); // measure

mention(m1); mentionWord(m1, w1); mentionWord(m1, w2); // President Obama
mention(m2); mentionWord(m2, w5); mentionWord(m2, w6); // the senator
mention(m3); mentionWord(m3, w8);                      // his

mentionType(m1, proper);
mentionType(m2, nominal);
mentionType(m3, pronominal);

mentionGender(m1, male);
mentionGender(m2, unknown);
mentionGender(m3, male);

mentionNumber(m1, singular);
mentionNumber(m2, singular);
mentionNumber(m3, singular);

mentionAnimacy(m1, animate);
mentionAnimacy(m2, animate);
mentionAnimacy(m3, animate);
 
mentionPerson(m1, third);
mentionPerson(m2, third);
mentionPerson(m3, third);

corefChain(c1); corefChainMention(c1, m1);
corefChain(c2); corefChainMention(c2, m2);
corefChain(c3); corefChainMention(c3, m3);

canMapToSameReferent(c1, c2);
canMapToSameReferent(c1, c3);
canMapToSameReferent(c2, c1);
canMapToSameReferent(c2, c3);
canMapToSameReferent(c3, c1);
canMapToSameReferent(c3, c2);